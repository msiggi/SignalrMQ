# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- nugetrelease

pool:
  vmImage: windows-latest

variables:
#  project:  '**/SignalrMQ.Client.csproj'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  #MSBuildSDKsPath: 'C:\\hostedtoolcache\\windows\\dotnet\\sdk\\6.0.100\\sdks'


steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core 6 sdk'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    includePreviewVersions: false

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: |
      **/*.csproj
      !**/*WorkerService*.csproj

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build 
    projects: |
      **/*.csproj
      !**/*WorkerService*.csproj
    arguments: '--configuration $(BuildConfiguration)'

- task: NuGetCommand@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/SignalrMQ.Broker.csproj;**/SignalrMQ.Client.csproj'
    versioningScheme: 'off'
    includeReferencedProjects: true
    includeSymbols: false
    nobuild: true
            

- task: NuGetCommand@2
  displayName: "nuget push"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(AzurApiKey)'

- task: DotNetCoreCLI@2
  displayName: Push Nuget Package
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Agent.BuildDirectory)/$(ArtifactNugetName)/*.nupkg
      -s https://api.nuget.org/v3/index.json
      -k $(NugetOrgApiKey) 
 